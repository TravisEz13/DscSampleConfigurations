{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"location": {
			"type": "string",
			"metadata": {
				"description": "The region to deploy the resources into"
			}
		},
		"sharepointFarmName" : {
			"type":"string",
			"metadata" : {
				"Description" : "The name of the Sharepoint farm"
			},
			"defaultValue": "spfarm"
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "The name of the Administrator of the new VMs and Domain"
			},
			"defaultValue":"spAdministrator"
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "The password for the Administrator account of the new VMs and Domain"
			}
		},
		"adVMSize": {
			"type": "string",
			"allowedValues": [
				"Standard_D1",
				"Standard_DS1",
				"Standard_D2",
				"Standard_DS2",
				"Standard_D3",
				"Standard_DS3",
				"Standard_D4",
				"Standard_DS4",
				"Standard_D11",
				"Standard_DS11",
				"Standard_D12",
				"Standard_DS12",
				"Standard_D13",
				"Standard_DS13",
				"Standard_D14",
				"Standard_DS14"
			],
			"metadata": {
				"description": "The size of the AD VMs Created"
			},
			"defaultValue": "Standard_DS1"
		},
		"sqlVMSize": {
			"type": "string",
			"allowedValues": [
				"Standard_D1",
				"Standard_DS1",
				"Standard_D2",
				"Standard_DS2",
				"Standard_D3",
				"Standard_DS3",
				"Standard_D4",
				"Standard_DS4",
				"Standard_D11",
				"Standard_DS11",
				"Standard_D12",
				"Standard_DS12",
				"Standard_D13",
				"Standard_DS13",
				"Standard_D14",
				"Standard_DS14"
			],
			"metadata": {
				"description": "The size of the SQL VMs Created"
			},
			"defaultValue": "Standard_DS3"
		},
		"witnessVMSize": {
			"type": "string",
			"allowedValues": [
				"Standard_D1",
				"Standard_DS1",
				"Standard_D2",
				"Standard_DS2",
				"Standard_D3",
				"Standard_DS3",
				"Standard_D4",
				"Standard_DS4",
				"Standard_D11",
				"Standard_DS11",
				"Standard_D12",
				"Standard_DS12",
				"Standard_D13",
				"Standard_DS13",
				"Standard_D14",
				"Standard_DS14"
			],
			"metadata": {
				"description": "The size of the Witness VM Created"
			},
			"defaultValue": "Standard_DS1"
		},
		"spVMSize": {
			"type": "string",
			"allowedValues": [
				"Standard_D1",
				"Standard_DS1",
				"Standard_D2",
				"Standard_DS2",
				"Standard_D3",
				"Standard_DS3",
				"Standard_D4",
				"Standard_DS4",
				"Standard_D11",
				"Standard_DS11",
				"Standard_D12",
				"Standard_DS12",
				"Standard_D13",
				"Standard_DS13",
				"Standard_D14",
				"Standard_DS14"
			],
			"metadata": {
				"description": "The size of the SP VMs Created"
			},
			"defaultValue": "Standard_DS2"
		},
		"domainName":{
			"type":"string",
			"metadata": {
				"description": "The FQDN of the AD Domain created "
			},
			"defaultValue":"sphafarm.local"
		},
		"sqlServerServiceAccountUserName":{
			"type":"string",
			"metadata": {
				"description": "The SQL Server Service account name"
			},
			"defaultValue":"sqlservice"
		},
		"sqlServerServiceAccountPassword":{
			"type": "securestring",
			"metadata": {
				"description": "The SQL Server Service account password"
			}
		},
		"sharePointSetupUserAccountUserName":{
			"type":"string",
			"metadata": {
				"description": "The Sharepoint Setup account name"
			},
			"defaultValue":"sp_setup"
		},
		"sharePointSetupUserAccountPassword":{
			"type": "securestring",
			"metadata": {
				"description": "The Sharepoint Setup account password"
			}
		},
		"sharePointFarmAccountUserName":{
			"type":"string",
			"metadata": {
				"description": "The Sharepoint Farm account name"
			},
			"defaultValue":"sp_farm"
		},
		"sharePointFarmAccountPassword":{
			"type": "securestring",
			"metadata": {
				"description": "The Sharepoint Farm account password"
			}
		},
		"sharePointFarmPassphrasePassword":{
			"type": "securestring",
			"metadata": {
				"description": "The Sharepoint Farm Passphrase"
			}
		},
		"spSiteTemplateName":{
			"type":"string",
			"metadata": {
				"description": "The Sharepoint Content Site Template Name"
			},
			"defaultValue":"STS#0"
		},
		"storageAccountNamePrefix": {
			"type": "string",
			 "metadata": {
				"description": "The prefix of the new storage account created to store the VMs disks, different storage accounts will be created for AD,SQL and Sharepoint VMs"
			}
		},
		"storageAccountType": {
			"type": "string",
			"metadata": {
				"description": "The type of the Storage Account created"
			},
			"defaultValue":"Premium_LRS"
		},
		"virtualNetworkAddressRange": {
			"type": "string",
			"metadata": {
				"description": "The address range of the new VNET in CIDR format"
			},
			"defaultValue":"10.0.0.0/16"
		},
		"staticSubnet": {
			"type": "string",
			"metadata": {
				"description": "The address range of the subnet static IPs are allocated from in the new VNET"
			},
			"defaultValue":"10.0.0.0/24"
		},
		"sqlSubnet": {
			"type": "string",
			"metadata": {
				"description": "The address range of the SQL subnet created in the new VNET"
			},
			"defaultValue":"10.0.1.0/24"
		},
		"spWebSubnet": {
			"type": "string",
			"metadata": {
				"description": "The address range of the SP Web subnet created in the new VNET"
			},
			"defaultValue":"10.0.2.0/24"
		},
		"spAppSubnet": {
			"type": "string",
			"metadata": {
				"description": "The address range of the SP App subnet created in the new VNET"
			},
			"defaultValue":"10.0.3.0/24"
		},
		"adPDCNICIPAddress": {
			"type": "string",
			"metadata": {
				"description": "The IP address of the new AD VM"
			},
			"defaultValue":"10.0.0.4"
		},
		"adBDCNICIPAddress": {
			"type": "string",
			"metadata": {
				"description": "The IP address of the new AD VM"
			},
			"defaultValue":"10.0.0.5"
		},
		"sqlLBIPAddress": {
			"type": "string",
			"metadata": {
				"description": "The IP address of the new SQL ILB"
			},
			"defaultValue":"10.0.0.6"
		},
		"spWebIPRGName" : {
			"type" : "string",
			"defaultValue" : ""
		},
		"spWebIPAddressName" : {
			"type" : "string"
		},
		"spWebIPNewOrExisting": {
			"type": "string",
			"defaultValue" : "new",
			"allowedValues" : [
				"new",
				"existing"
			],
			"metadata": {
				"Description": "Indicates whether the Sharepoint farm's IP is new or existing"
			}
		},
		"dnsPrefix": {
			"type":"string",
			"metadata": {
				"description": "The DNS Prefix for the Public IP Address for the Sharepoint Web Application"
			}
		},
		"spCADNSPrefix": {
			"type":"string",
			"metadata": {
				"description": "The DNS Prefix for the Public IP Address for the Central Admin site"
			}
		},
		"spCAIPAddressName" : {
			"type" : "string"
		},
		"spCAIPNewOrExisting": {
			"type": "string",
			"defaultValue" : "new",
			"allowedValues" : [
				"new",
				"existing"
			],
			"metadata": {
				"Description": "Indicates whether the Sharepoint farm's IP is new or existing"
			}
		},
		"spCARGName" : {
			"type" : "string",
			"defaultValue" : ""
		},
		"baseUrl" : {
			"type" : "string",
			"metadata": {
				"artifactsBaseUrl": ""
			},
			"defaultValue": "https://raw.githubusercontent.com/kenazk/sharepoint/master"
		}
	},
	"variables": {
		"configDatabaseName" : "SP_Config",
		"administrationContentDatabaseName" : "SP_AdminContent",
		"contentDatabaseName" : "spfarm_Content",
		"lbSettings" : {
			"rdpLBFE":"rdpLBFE",
			"sqlLBFE":"sqlLBFE",
			"spWebLBFE":"spWebLBFE",
			"spCALBFE":"spCALBFE",
			"adLBBE":"adLBBE",
			"sqlLBBE":"sqlLBBE",
			"spWebLBBE":"spWebLBBE",
			"spCALBBE":"spCALBBE",
			"spWebLB":"spWeb",
			"spCALB":"spCALB",
			"sqlLBName" : "sqlLoadBalancer",
			"rdpLBName" : "rdpLoadBalancer",
			"spWebLBName" : "spWebLoadBalancer",
			"spCALBName" : "spCALoadBalancer"
		},
		"subnetNames" : {
			"staticSubnetName": "staticSubnet",
			"sqlSubnetName": "sqlSubnet",
			"spWebSubnetName": "spWebSubnet",
			"spAppSubnetName": "spAppSubnet"
		},
		"RDPNAT":"RDP",
		"spCANAT":"spCANAT",
		"SQLAOProbe":"SQLAlwaysOnEndPointProbe",
		"spWebProbe":"spWebProbe",
		"spWebProbePort":8088,
		"rdpIPAddressName": "rdpIP",
		"vmSettings" : {
			"availabilitySets" : {
				"sqlAvailabilitySetName":"sqlAvailabiltySet",
				"adAvailabilitySetName": "adAvailabiltySet",
				"spWebAvailabilitySetName":"spWebAvailabiltySet",
				"spAppAvailabilitySetName": "spAppAvailabiltySet"
			},
			"noOfSqlVMs":2,
			"noOfspRoleVMs":2,
			"vmContainerName": "vhds",
			"adPDCVMName":"ad-pdc",
			"adBDCVMName":"ad-bdc",
			"sqlVMName":"sql-",
			"sqlwVMName":"sql-w",
			"spwebVMName":"sps-web-",
			"spappVMName":"sps-app-",
			"windowsImagePublisher":"MicrosoftWindowsServer",
			"windowsImageOffer":"WindowsServer",
			"windowsImageSKU":"2012-R2-Datacenter",
			"sqlImagePublisher":"MicrosoftSQLServer",
			"sqlImageOffer":"SQL2014-WS2012R2",
			"sqlImageSKU":"Enterprise",
			"spImagePublisher":"MicrosoftSharePoint",
			"spImageOffer":"MicrosoftSharePointServer",
			"spImageSKU": "2013",
			"rdpPort":3389,
			"spCentralAdminPort":80,
			"windowsDiskSize":128,
			"sqlDiskSize":1000,
			"spDiskSize":128
		},
		"virtualNetworkName":"spfarmhaVNET",
		"sqlAOEPName":"[concat(parameters('dnsPrefix'),'-hadr')]",
		"sqlAOAGName":"[concat(parameters('dnsPrefix'),'-ag')]",
		"sqlAOListenerName":"[concat(parameters('dnsPrefix'),'ag-listener')]",
		"sharePath":"[concat(parameters('dnsPrefix'),'-fsw')]",
		"clusterName":"[concat(parameters('dnsPrefix'),'-fc')]",
		"adPDCNicName": "[concat(variables('vmSettings').adPDCVMName,'-nic')]",
		"adBDCNicName": "[concat(variables('vmSettings').adBDCVMName,'-nic')]",
		"sqlwNicName": "[concat(variables('vmSettings').sqlwVMName,'-nic')]",
		"VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
		"staticSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
		"sqlSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').sqlSubnetName)]",
		"spWebSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').spWebSubnetName)]",
		"spAppSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').spAppSubnetName)]",
		"ids" : {
			"adNicId" : "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]",
			"rdplbID":"[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName)]",
			"spWeblbID":"[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spWebLBName)]",
			"sqllbID":"[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName)]",
			"spCAlbID":"[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spCALBName)]"
		},
		"derivedIds":{
			"adIPConfigID": "[concat(variables('ids').adNicId,'/ipConfigurations/ipconfig1')]",
			"rdplbFEConfigID":"[concat(variables('ids').rdplbID,'/frontendIPConfigurations/',variables('lbSettings').rdpLBFE)]",
			"spWebLBFEConfigID":"[concat(variables('ids').spWeblbID,'/frontendIPConfigurations/',variables('lbSettings').spWebLBFE)]",
			"adRDPNATRuleID":"[concat(variables('ids').rdplbID,'/inboundNatRules/',variables('RDPNAT'))]",
			"adBEAddressPoolID":"[concat(variables('ids').rdplbID,'/backendAddressPools/',variables('lbSettings').adLBBE)]",
			"spWebProbeID":"[concat(variables('ids').spWeblbID,'/probes/',variables('spWebProbe'))]",
			"spWebBEAddressPoolID":"[concat(variables('ids').spWeblbID,'/backendAddressPools/',variables('lbSettings').spWebLBBE)]",
			"sqlBEAddressPoolID":"[concat(variables('ids').sqllbID,'/backendAddressPools/',variables('lbSettings').sqlLBBE)]",
			"sqllbFEConfigID":"[concat(variables('ids').sqllbID,'/frontendIPConfigurations/',variables('lbSettings').sqlLBFE)]",
			"sqllbProbeID":"[concat(variables('ids').sqllbID,'/probes/',variables('SQLAOProbe'))]",
			"spCABEAddressPoolID":"[concat(variables('ids').spCAlbID,'/backendAddressPools/',variables('lbSettings').spCALBBE)]",
			"spCAlbFEConfigID":"[concat(variables('ids').spCAlbID,'/frontendIPConfigurations/',variables('lbSettings').spCALBFE)]",
			"spCANATRuleID":"[concat(variables('ids').spCAlbID,'/inboundNatRules/',variables('spCANAT'))]"
		},
		"subnets": [
			{
				"name": "[variables('subnetNames').staticSubnetName]",
				"properties": {
					"addressPrefix": "[parameters('staticSubnet')]"
				}
			},
			{
				"name": "[variables('subnetNames').sqlSubnetName]",
				"properties": {
					"addressPrefix": "[parameters('sqlSubnet')]"
				}
			},
			{
				"name": "[variables('subnetNames').spWebSubnetName]",
				"properties": {
					"addressPrefix": "[parameters('spWebSubnet')]"
				}
			},
			{
				"name": "[variables('subnetNames').spAppSubnetName]",
				"properties": {
					"addressPrefix": "[parameters('spAppSubnet')]"
				}
			}
		],
		"configuration": {
			"vnetwithDNSTemplateURL":"[concat(parameters('baseUrl'),'/vnet-with-dns-server.json')]",
			"nicTemplateURL": "[concat(parameters('baseUrl'),'/nic.json')]",
			"adPDCModulesURL":"[concat(variables('assetLocation'),'/CreateADPDC.ps1.zip')]",
			"adPDCConfigurationFunction":"CreateADPDC.ps1\\CreateADPDC",
			"adBDCModulesURL":"[concat(variables('assetLocation'),'/CreateADBDC.ps1.zip')]",
			"adBDCConfigurationFunction":"CreateADBDC.ps1\\CreateADBDC",
			"fswModulesURL":"[concat(variables('assetLocation'),'/CreateFileShareWitness.ps1.zip')]",
			"fswConfigurationFunction":"CreateFileShareWitness.ps1\\CreateFileShareWitness",
			"sqlAOPrepareModulesURL":"[concat(variables('assetLocation'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
			"sqlAOPrepareConfigurationFunction":"PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
			"createClusterModulesURL":"[concat(variables('assetLocation'),'/CreateFailoverCluster.ps1.zip')]",
			"createClusterConfigurationFunction":"CreateFailoverCluster.ps1\\CreateFailoverCluster",
			"spModulesURL":"[concat(variables('assetLocation'),'/ConfigureSharePointServerHA.ps1.zip')]",
			"spConfigurationFunction":"ConfigureSharePointServerHA.ps1\\ConfigureSharePointServerHA",
			"spWebIPAdressSetupURL" : "[concat(parameters('baseUrl'),'/publicip-',parameters('spWebIPNewOrExisting'),'.json')]",
			"spCAIPAdressSetupURL" : "[concat(parameters('baseUrl'),'/publicip-',parameters('spCAIPNewOrExisting'),'.json')]"
		},
		"assetLocation": "https://github.com/kenazk/sharepoint/raw/master/dsc2.1",
		"adCommands" : "powershell.exe -ExecutionPolicy Unrestricted -command \"$dnslog = New-Object System.Diagnostics.Eventing.Reader.EventLogConfiguration 'Microsoft-Windows-DNS-Client/Operational'; $dnslog.IsEnabled=$true; $dnslog.SaveChanges(); ipconfig /flushdns; ipconfig /all | Out-File C:\\ipconfig.txt; Resolve-DnsName download.microsoft.com -QuickTimeout | out-file C:\\download.txt; Resolve-DnsName sphafarm.com -QuickTimeout | out-file C:\\sphafarm.txt; (Get-WinEvent -ListLog Microsoft-Windows-DNS-Client/Operational).IsEnabled | Out-File C:\\isEnabled.txt; New-ItemProperty 'HKLM:\\SYSTEM\\CurrentControlSet\\Services\\Tcpip6\\Parameters\\' -Name 'DisabledComponents' -Value '0xffffffff' -PropertyType 'DWord'; Restart-Computer -force;\"",
		"commands" : "powershell.exe -ExecutionPolicy Unrestricted -command \"$dnslog = New-Object System.Diagnostics.Eventing.Reader.EventLogConfiguration 'Microsoft-Windows-DNS-Client/Operational'; $dnslog.IsEnabled=$true; $dnslog.SaveChanges(); ipconfig /flushdns; ipconfig /all | Out-File C:\\ipconfig.txt; Resolve-DnsName download.microsoft.com -QuickTimeout | out-file C:\\download.txt; Resolve-DnsName sphafarm.com -QuickTimeout | out-file C:\\sphafarm.txt; (Get-WinEvent -ListLog Microsoft-Windows-DNS-Client/Operational).IsEnabled | Out-File C:\\isEnabled.txt; Start-Sleep -s 180\""
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(parameters('storageAccountNamePrefix'), copyindex())]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"copy": {
				"name": "storageAccountLoop",
				"count": 3
			},
			"properties": {
			"accountType": "[parameters('storageAccountType')]"
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('rdpIPAddressName')]",
			"location": "[parameters('location')]",
			"properties": {
				"publicIPAllocationMethod": "Dynamic"
			}
		},
		{
      "name": "spWebIPSetup",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').spWebIPAdressSetupURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
			    "location": {
			      "value" : "[parameters('location')]"
			    },
			    "publicIPAddressName": {
			      "value" : "[parameters('spWebIPAddressName')]"
			    },
			    "publicIPAddressType" : {
			      "value" : "dynamic"
			    },
			    "dnsPrefix" : {
			      "value" : "[parameters('dnsPrefix')]"
			    },
			    "publicIpRGName" : {
			    	"value" : "[parameters('spWebIPRGName')]"
			    }
        }
      }
    },
		{
      "name": "spCentralAdminIPSetup",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').spCAIPAdressSetupURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
			    "location": {
			      "value" : "[parameters('location')]"
			    },
			    "publicIPAddressName": {
			      "value" : "[parameters('spCAIPAddressName')]"
			    },
			    "publicIPAddressType" : {
			      "value" : "dynamic"
			    },
			    "dnsPrefix" : {
			      "value" : "[parameters('spCADNSPrefix')]"
			    },
			    "publicIpRGName" : {
			    	"value" : "[parameters('spCARGName')]"
			    }
        }
      }
    },
		{
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('vmSettings').availabilitySets.adAvailabilitySetName]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]"
		},
		{
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('vmSettings').availabilitySets.sqlAvailabilitySetName]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"properties": {
				"platformFaultDomainCount": "3",
				"platformUpdateDomainCount": "3"
			}
		},
		{
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('vmSettings').availabilitySets.spWebAvailabilitySetName]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]"
		},
		{
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('vmSettings').availabilitySets.spAppAvailabilitySetName]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]"
		},
		{
			"name": "[variables('virtualNetworkName')]",
			"type": "Microsoft.Network/virtualNetworks",
			"location": "[parameters('location')]",
			"apiVersion": "2015-05-01-preview",
			"properties": {
				"addressSpace": {
				"addressPrefixes": [
					"[parameters('virtualNetworkAddressRange')]"
				]
				},
				"subnets": "[variables('subnets')]"
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"name": "[variables('lbSettings').rdpLBName]",
			"type": "Microsoft.Network/loadBalancers",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/publicIPAddresses',variables('rdpIPAddressName'))]"
			],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('lbSettings').rdpLBFE]",
						"properties": {
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('rdpIPAddressName'))]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('lbSettings').adLBBE]"

					}
				],
				"inboundNatRules": [
					{
						"name": "[variables('RDPNAT')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('derivedIds').rdplbFEConfigID]"
							},
							"protocol": "tcp",
							"frontendPort": "[variables('vmSettings').rdpPort]",
							"backendPort": 3389,
							"enableFloatingIP": false
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"name": "[variables('lbSettings').spWebLBName]",
			"type": "Microsoft.Network/loadBalancers",
			"location": "[parameters('location')]",
			"dependsOn": [
				"spWebIPSetup",
				"[resourceId('Microsoft.Network/loadbalancers', variables('lbSettings').rdpLBName)]"
			],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('lbSettings').spWebLBFE]",
						"properties": {
							"publicIPAddress": {
								"id": "[reference('spWebIPSetup').outputs.resourceId.value]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('lbSettings').spWebLBBE]"
					}
				],
				"loadBalancingRules": [
					{
						"name": "[variables('lbSettings').spWebLB]",
						"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('derivedIds').spWebLBFEConfigID]"
						},
						"backendAddressPool": {
							"id": "[variables('derivedIds').spWebBEAddressPoolID]"
						},
						"probe": {
							"id": "[variables('derivedIds').spWebProbeID]"
						},
						"protocol": "tcp",
						"frontendPort": 80,
						"backendPort": 80,
						"enableFloatingIP": false
						}
					}
				],
				"probes": [
					{
						"name": "[variables('spWebProbe')]",
						"properties": {
							"protocol": "http",
							"port": "[variables('spWebProbePort')]",
							"intervalInSeconds": "15",
							"numberOfProbes": "5",
							"requestPath":"/iisstart.htm"
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"name": "[variables('lbSettings').sqlLBName]",
			"type": "Microsoft.Network/loadBalancers",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"
			],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('lbSettings').sqlLBFE]",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress" :"[parameters('sqlLBIPAddress')]",
							"subnet": {
								"id": "[variables('staticSubnetRef')]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('lbSettings').sqlLBBE]"
					}
				],
				"loadBalancingRules": [
					{
						"name": "SQLAlwaysOnEndPointListener",
						"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('derivedIds').sqllbFEConfigID]"
						},
						"probe": {
							"id": "[variables('derivedIds').sqllbProbeID]"
						},
						"protocol": "tcp",
						"frontendPort": 1433,
						"backendPort": 1433,
						"enableFloatingIP": true
						}
					}
				],
				"probes": [
					{
						"name": "[variables('SQLAOProbe')]",
						"properties": {
							"protocol": "tcp",
							"port": 59999,
							"intervalInSeconds": "5",
							"numberOfProbes": "2"
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"name": "[variables('lbSettings').spCALBName]",
			"type": "Microsoft.Network/loadBalancers",
			"location": "[parameters('location')]",
			"dependsOn": [
				"spCentralAdminIPSetup"
			],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('lbSettings').spCALBFE]",
						"properties": {
							"publicIPAddress": {
								"id": "[reference('spCentralAdminIPSetup').outputs.resourceId.value]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('lbSettings').spCALBBE]"

					}
				],
				"inboundNatRules": [
					{
						"name": "[variables('spCANAT')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('derivedIds').spCAlbFEConfigID]"
							},
							"protocol": "tcp",
							"frontendPort": 80,
							"backendPort": "[variables('vmSettings').spCentralAdminPort]",
							"enableFloatingIP": false
						}
					}
				]
			}
		},
		{
			"name": "[variables('adPDCNicName')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('virtualNetworkName')]",
				"[concat('Microsoft.Network/loadBalancers/',variables('lbSettings').rdpLBName)]"
			],
			"apiVersion": "2015-05-01-preview",
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress" :"[parameters('adPDCNICIPAddress')]",
							"subnet": {
								"id": "[variables('staticSubnetRef')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id":"[variables('derivedIds').adBEAddressPoolID]"
								}
							],
							"loadBalancerInboundNatRules": [
								{
									"id": "[variables('derivedIds').adRDPNATRuleID]"
								}
							]
						}
					}
				]
			}
		},
		{
			"name": "[variables('adBDCNicName')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Network/loadBalancers/',variables('lbSettings').rdpLBName)]"
			],
			"apiVersion": "2015-05-01-preview",
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress" :"[parameters('adBDCNICIPAddress')]",
							"subnet": {
								"id": "[variables('staticSubnetRef')]"
							}
						}
					}
				]
			}
		},
		{
			"name": "[concat(variables('vmSettings').sqlVMName, copyindex(),'-nic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[parameters('location')]",
			"apiVersion": "2015-05-01-preview",
			"copy": {
				"name": "sqlnicLoop",
				"count": "[variables('vmSettings').noOfSqlVMs]"
			},
			"dependsOn": [
				"[variables('virtualNetworkName')]",
				"[concat('Microsoft.Network/loadBalancers/',variables('lbSettings').sqlLBName)]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('sqlSubnetRef')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id":"[variables('derivedIds').sqlBEAddressPoolID]"
								}
							]
						}
					}
				]
			}
		},
		{
			"name": "[concat(variables('vmSettings').spwebVMName, copyindex(),'-nic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[parameters('location')]",
			"apiVersion": "2015-05-01-preview",
			"copy": {
				"name": "spWebnicLoop",
				"count": "[variables('vmSettings').noOfspRoleVMs]"
			},
			"dependsOn": [
				"[variables('virtualNetworkName')]",
				"[concat('Microsoft.Network/loadBalancers/',variables('lbSettings').spWebLBName)]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('spWebSubnetRef')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id":"[variables('derivedIds').spWebBEAddressPoolID]"
								}
							]
						}
					}
				]
			}
		},
		{
			"name": "[concat(variables('vmSettings').spappVMName,'0-nic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[parameters('location')]",
			"apiVersion": "2015-05-01-preview",
			"dependsOn": [
				"[variables('virtualNetworkName')]",
				"[concat('Microsoft.Network/loadBalancers/',variables('lbSettings').spCALBName)]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('spAppSubnetRef')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id":"[variables('derivedIds').spCABEAddressPoolID]"
								}
							],
							"loadBalancerInboundNatRules": [
								{
									"id": "[variables('derivedIds').spCANATRuleID]"
								}
							]
						}
					}
				]
			}
		},
		{
			"name": "[concat(variables('vmSettings').spappVMName,'1-nic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[parameters('location')]",
			"apiVersion": "2015-05-01-preview",
			"dependsOn": [
				"[variables('virtualNetworkName')]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('spAppSubnetRef')]"
							}
						}
					}
				]
			}
		},
		{
			"name": "[variables('sqlwNicName')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Network/loadBalancers/',variables('lbSettings').sqlLBName)]"
			],
			"apiVersion": "2015-05-01-preview",
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('sqlSubnetRef')]"
							}
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('vmSettings').adPDCVMName]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',concat(parameters('storageAccountNamePrefix'), '0'))]",
				"[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.adAvailabilitySetName)]",
				"[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName)]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('adVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.adAvailabilitySetName)]"
				},
				"osProfile": {
					"computername": "[variables('vmSettings').adPDCVMName]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('vmSettings').windowsImagePublisher]",
						"offer": "[variables('vmSettings').windowsImageOffer]",
						"sku": "[variables('vmSettings').windowsImageSKU]",
						"version": "latest"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('storageAccountNamePrefix'),'0.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/',variables('vmSettings').adPDCVMName,'-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri":"[concat('http://',parameters('storageAccountNamePrefix'),'0.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/', variables('vmSettings').adPDCVMName,'data-1.vhd')]"
								},
							"name":"[concat(variables('vmSettings').adPDCVMName,'-data-disk1')]",
							"createOption": "empty",
							"caching" : "None",
							"diskSizeGB": "[variables('vmSettings').windowsDiskSize]",
							"lun": 0
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]"
						}
					]
				}
			},
			"resources" :[
				{
					"type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmSettings').adPDCVMName,'/EnableDnsClientLogging')]",
          "location": "[parameters('location')]",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').adPDCVMName)]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "settings": {
              "commandToExecute": "[variables('adCommands')]"
            }
          }
        },
				{
					"type": "Microsoft.Compute/virtualMachines/extensions",
					"name": "[concat(variables('vmSettings').adPDCVMName,'/InstallDomainController')]",
					"apiVersion": "2015-05-01-preview",
					"location": "[parameters('location')]",
					"dependsOn":[
						"[resourceId('Microsoft.Compute/virtualMachines', variables('vmSettings').adPDCVMName)]",
						"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').adPDCVMName,'/extensions/EnableDnsClientLogging')]"
					],
					"properties": {
						"publisher": "Microsoft.Powershell.Test",
						"type": "DSC",
						"typeHandlerVersion": "2.4",
						"settings": {
							"modulesURL": "[variables('configuration').adPDCModulesURL]",
							"configurationFunction": "[variables('configuration').adPDCConfigurationFunction]",
							"properties": {
								"domainName": "[parameters('domainName')]",
								"adminCreds":{
									"userName": "[parameters('adminUserName')]",
									"password": "PrivateSettingsRef:adminPassword"
								}
							}
						},
						"protectedSettings": {
							"items": {
								"adminPassword": "[parameters('adminPassword')]"
							}
						}
					}
				}
			]
		},
		{
			"name": "UpdateVNetDNS1",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').adPDCVMName,'/extensions/InstallDomainController')]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
				  "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
				  "contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {"value":"[parameters('location')]"},
					"virtualNetworkName": {"value":"[variables('virtualNetworkName')]"},
					"virtualNetworkAddressRange": {"value":"[parameters('virtualNetworkAddressRange')]"},
					"subnets": {"value":"[variables('subnets')]"},
					"DNSServerAddress": {"value":["[parameters('adPDCNICIPAddress')]"]}
				}
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('vmSettings').adBDCVMName]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',concat(parameters('storageAccountNamePrefix'), '0'))]",
				"[resourceId('Microsoft.Network/networkInterfaces',variables('adBDCNicName'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.adAvailabilitySetName)]",
				"Microsoft.Resources/deployments/UpdateVNetDNS1"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('adVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.adAvailabilitySetName)]"
				},
				"osProfile": {
					"computername": "[variables('vmSettings').adBDCVMName]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('vmSettings').windowsImagePublisher]",
						"offer": "[variables('vmSettings').windowsImageOffer]",
						"sku": "[variables('vmSettings').windowsImageSKU]",
						"version": "latest"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('storageAccountNamePrefix'),'0.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/',variables('vmSettings').adBDCVMName,'-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri":"[concat('http://',parameters('storageAccountNamePrefix'),'0.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/', variables('vmSettings').adBDCVMName,'data-1.vhd')]"
								},
							"name":"[concat(variables('vmSettings').adBDCVMName,'-data-disk1')]",
							"createOption": "empty",
							"caching" : "None",
							"diskSizeGB": "[variables('vmSettings').windowsDiskSize]",
							"lun": 0
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('adBDCNicName'))]"
						}
					]
				}
			},
			"resources" : [
				{
					"type": "Microsoft.Compute/virtualMachines/extensions",
					"name": "[concat(variables('vmSettings').adBDCVMName,'/EnableDnsClientLogging')]",
					"location": "[parameters('location')]",
					"apiVersion": "2015-05-01-preview",
					"dependsOn": [
						"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').adBDCVMName)]"
					],
					"properties": {
						"publisher": "Microsoft.Compute",
						"type": "CustomScriptExtension",
						"typeHandlerVersion": "1.4",
						"settings": {
							"commandToExecute": "[variables('adCommands')]"
						}
					}
				},
				{
					"type": "Microsoft.Compute/virtualMachines/extensions",
					"name": "[concat(variables('vmSettings').adBDCVMName,'/CreateBDC')]",
					"apiVersion": "2015-05-01-preview",
					"location": "[parameters('location')]",
					"dependsOn":[
						"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').adBDCVMName)]",
						"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').adBDCVMName,'/extensions/EnableDnsClientLogging')]"
					],
					"properties": {
						"publisher": "Microsoft.Powershell.Test",
						"type": "DSC",
						"typeHandlerVersion": "2.4",
						"settings": {
							"modulesURL": "[variables('configuration').adBDCModulesURL]",
							"configurationFunction": "[variables('configuration').adBDCConfigurationFunction]",
							"properties": {
								"domainName": "[parameters('domainName')]",
								"adminCreds":{
									"userName": "[parameters('adminUserName')]",
									"password": "privateSettingsRef:adminPassword"
								}
							}
						},
						"protectedSettings": {
							"items": {
								"adminPassword": "[parameters('adminPassword')]"
							}
						}
					}
				}
			]
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(variables('vmSettings').sqlVMName, copyindex())]",
			"location": "[parameters('location')]",
			"copy": {
				"name": "sqlvirtualMachineLoop",
				"count": "[variables('vmSettings').noOfSqlVMs]"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',concat(parameters('storageAccountNamePrefix'), '1'))]",
				"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmSettings').sqlVMName, copyindex(),'-nic'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.sqlAvailabilitySetName)]",
				"Microsoft.Resources/deployments/UpdateVNetDNS1"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('sqlVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.sqlAvailabilitySetName)]"
				},
				"osProfile": {
					"computername": "[concat(variables('vmSettings').sqlVMName, copyindex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('vmSettings').sqlImagePublisher]",
						"offer": "[variables('vmSettings').sqlImageOffer]",
						"sku": "[variables('vmSettings').sqlImageSKU]",
						"version": "latest"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('storageAccountNamePrefix'),'1.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/',variables('vmSettings').sqlVMName, copyindex(), '-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri":"[concat('http://',parameters('storageAccountNamePrefix'),'1.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/', variables('vmSettings').sqlVMName, copyindex(), '-Data-1.vhd')]"
							},
							"name":"[concat(variables('vmSettings').sqlVMName, copyindex(),'-data-disk1')]",
							"caching" : "None",
							"createOption": "empty",
							"diskSizeGB": "[variables('vmSettings').sqlDiskSize]",
							"lun": 0
						},
						{
							"vhd": {
								"uri":"[concat('http://',parameters('storageAccountNamePrefix'),'1.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/', variables('vmSettings').sqlVMName, copyindex(), '-log.vhd')]"
							},
							"name":"[concat(variables('vmSettings').sqlVMName, copyindex(),'-log-disk1')]",
							"caching" : "None",
							"createOption": "empty",
							"diskSizeGB": "[variables('vmSettings').sqlDiskSize]",
							"lun": 1
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmSettings').sqlVMName, copyindex(),'-nic'))]"
						}
					]
				}
			},
			"resources" : [
				{
					"type": "Microsoft.Compute/virtualMachines/extensions",
					"name": "[concat(variables('vmSettings').sqlVMName, copyindex(),'/EnableDnsClientLogging')]",
					"location": "[parameters('location')]",
					"apiVersion": "2015-05-01-preview",
					"dependsOn": [
						"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').sqlVMName, copyindex())]"
					],
					"properties": {
						"publisher": "Microsoft.Compute",
						"type": "CustomScriptExtension",
						"typeHandlerVersion": "1.4",
						"settings": {
								"commandToExecute": "[variables('commands')]"
						}
					}
				}
			]
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmSettings').sqlVMName,'0/sqlAOPrepare')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"dependsOn":[
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').sqlVMName,'0')]",
				"[concat('Microsoft.Compute/virtualMachines/',variables('vmSettings').sqlwVMName,'/extensions/CreateFileShareWitness')]",
				"[concat('Microsoft.Resources/deployments/Update',variables('vmSettings').sqlVMName,'0-nic')]"
			],
			"properties": {
				"publisher": "Microsoft.Powershell.Test",
				"type": "DSC",
				"typeHandlerVersion": "2.4",
				"settings": {
					"modulesURL": "[variables('configuration').sqlAOPrepareModulesURL]",
					"configurationFunction": "[variables('configuration').sqlAOPrepareConfigurationFunction]",
					"properties": {
						"domainName": "[parameters('domainName')]",
						"sqlAlwaysOnEndpointName":"[variables('sqlAOEPName')]",
						"adminCreds":{
							"userName": "[parameters('adminUserName')]",
							"password": "privateSettingsRef:AdminPassword"
						},
						"sqlServiceCreds":{
							"userName": "[parameters('sqlServerServiceAccountUserName')]",
							"password": "privateSettingsRef:SqlServerServiceAccountPassword"
						},
						"sharePointSetupUserAccountcreds":{
							"userName": "[parameters('sharePointSetupUserAccountUserName')]",
							"password": "privateSettingsRef:SharePointSetupUserAccountPassword"
						}
					}
				},
				"protectedSettings": {
					"items": {
						"adminPassword": "[parameters('adminPassword')]",
						"sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]",
						"sharePointSetupUserAccountPassword": "[parameters('sharePointSetupUserAccountPassword')]"
					}
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmSettings').sqlVMName,'1/CreateCluster')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"dependsOn":[
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').sqlVMName,'1')]",
				"[concat('Microsoft.Compute/virtualMachines/',variables('vmSettings').sqlVMName,'0/extensions/sqlAOPrepare')]",
				"[concat('Microsoft.Resources/deployments/Update',variables('vmSettings').sqlVMName,'1-nic')]"
			],
			"properties": {
				"publisher": "Microsoft.Powershell.Test",
				"type": "DSC",
				"typeHandlerVersion": "2.4",
				"settings": {
					"modulesURL": "[variables('configuration').createClusterModulesURL]",
					"configurationFunction": "[variables('configuration').createClusterConfigurationFunction]",
					"properties": {
						"domainName": "[parameters('domainName')]",
						"clusterName":"[variables('clusterName')]",
						"sharePath":"[concat('\\\\',variables('vmSettings').sqlwVMName,'\\',variables('sharePath'))]",
						"nodes":["[concat(variables('vmSettings').sqlVMName,'0')]","[concat(variables('vmSettings').sqlVMName,'1')]"],
						"sqlAlwaysOnEndpointName":"[variables('sqlAOEPName')]",
						"sqlAlwaysOnAvailabilityGroupName":"[variables('sqlAOAGName')]",
						"sqlAlwaysOnAvailabilityGroupListenerName":"[variables('sqlAOListenerName')]",
						"sqlAlwaysOnAvailabilityGroupListenerPort":1433,
						"databaseNames":null,
						"lbName":"[variables('lbSettings').sqlLBName]",
						"lbAddress":"[parameters('sqlLBIPAddress')]",
						"primaryReplica":"[concat(variables('vmSettings').sqlVMName,'1')]",
						"secondaryReplica":"[concat(variables('vmSettings').sqlVMName,'0')]",
						"dnsServerName":"[variables('vmSettings').adPDCVMName]",
						"adminCreds":{
							"userName": "[parameters('adminUserName')]",
							"password": "privateSettingsRef:adminPassword"
						},
						"sqlServiceCreds":{
							"userName": "[parameters('sqlServerServiceAccountUserName')]",
							"password": "privateSettingsRef:sqlServerServiceAccountPassword"
						},
						"sharePointSetupUserAccountcreds":{
							"userName": "[parameters('sharePointSetupUserAccountUserName')]",
							"password": "privateSettingsRef:sharePointSetupUserAccountPassword"
						}
					}
				},
				"protectedSettings": {
					"items": {
						"adminPassword": "[parameters('adminPassword')]",
						"sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]",
						"sharePointSetupUserAccountPassword": "[parameters('sharePointSetupUserAccountPassword')]"
					}
				}
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('vmSettings').sqlwVMName]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',concat(parameters('storageAccountNamePrefix'), '1'))]",
				"[resourceId('Microsoft.Network/networkInterfaces',variables('sqlwNicName'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.sqlAvailabilitySetName)]",
				"Microsoft.Resources/deployments/UpdateVNetDNS1"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('witnessVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.sqlAvailabilitySetName)]"
				},
				"osProfile": {
					"computername": "[variables('vmSettings').sqlwVMName]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('vmSettings').windowsImagePublisher]",
						"offer": "[variables('vmSettings').windowsImageOffer]",
						"sku": "[variables('vmSettings').windowsImageSKU]",
						"version": "latest"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('storageAccountNamePrefix'),'1.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/',variables('vmSettings').sqlwVMName,'-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri":"[concat('http://',parameters('storageAccountNamePrefix'),'1.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/', variables('vmSettings').sqlwVMName,'-data-1.vhd')]"
								},
							"name":"[concat(variables('vmSettings').sqlwVMName,'-data-disk1')]",
							"caching" : "None",
							"createOption": "empty",
							"diskSizeGB": "[variables('vmSettings').windowsDiskSize]",
							"lun": 0
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('sqlwNicName'))]"
						}
					]
				}
			},
			"resources": [
        {
					"type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmSettings').sqlwVMName,'/EnableDnsClientLogging')]",
          "location": "[parameters('location')]",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').sqlwVMName)]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "settings": {
              "commandToExecute": "[variables('commands')]"
            }
          }
        }
      ]
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmSettings').sqlwVMName,'/CreateFileShareWitness')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"dependsOn":[
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').sqlwVMName)]",
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').sqlwVMName,'/extensions/EnableDnsClientLogging')]",
				"Microsoft.Resources/deployments/UpdateSQLWNic"
			],
			"properties": {
				"publisher": "Microsoft.Powershell.Test",
				"type": "DSC",
				"typeHandlerVersion": "2.4",
				"settings": {
					"modulesURL": "[variables('configuration').fswModulesURL]",
					"configurationFunction": "[variables('configuration').fswConfigurationFunction]",
					"properties": {
						"domainName": "[parameters('domainName')]",
						"SharePath":"[variables('sharePath')]",
						"adminCreds":{
							"userName": "[parameters('adminUserName')]",
							"password": "privateSettingsRef:adminPassword"
						}

					}
				},
				"protectedSettings": {
					"items": {
						"adminPassword": "[parameters('adminPassword')]"
					}
				}
			}
		},
		{
			"name": "UpdateVNetDNS2",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/',variables('vmSettings').adBDCVMName,'/extensions/CreateBDC')]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
				  "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
				  "contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {"value":"[parameters('location')]"},
					"virtualNetworkName": {"value":"[variables('virtualNetworkName')]"},
					"virtualNetworkAddressRange": {"value":"[parameters('virtualNetworkAddressRange')]"},
					"subnets": {"value":"[variables('subnets')]"},
					"DNSServerAddress": {"value":["[parameters('adPDCNICIPAddress')]","[parameters('adBDCNICIPAddress')]"]}
				}
			}
		},
		{
			"name": "UpdateSQLWNic",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
				"Microsoft.Resources/deployments/UpdateVNetDNS2"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('configuration').nicTemplateURL]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {
						"value": "[parameters('location')]"
					},
					"nicName": {
						"value": "[variables('sqlwNicName')]"
					},
					"ipConfigurations": {
						"value": [
							{
								"name": "ipconfig1",
								"properties": {
									"privateIPAllocationMethod": "Dynamic",
									"subnet": {
										"id": "[variables('sqlSubnetRef')]"
									}
								}
							}
						]
					},
					"dnsServers": {
						"value": [
								"[parameters('adPDCNICIPAddress')]","[parameters('adBDCNICIPAddress')]"
						]
					}

				}
			}
		},
		{
			"name":  "[concat('Update',variables('vmSettings').sqlVMName, copyindex(),'-nic')]",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"copy": {
				"name": "sqlnicupdateLoop",
				"count": "[variables('vmSettings').noOfSqlVMs]"
			},
			"dependsOn": [
				"Microsoft.Resources/deployments/UpdateVNetDNS2",
				"Microsoft.Resources/deployments/UpdateSQLWNic"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('configuration').nicTemplateURL]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {
						"value": "[parameters('location')]"
					},
					"nicName": {
						"value": "[concat(variables('vmSettings').sqlVMName, copyindex(),'-nic')]"
					},
					"ipConfigurations": {
						"value": [
							{
								"name": "ipconfig1",
								"properties": {
									"privateIPAllocationMethod": "Dynamic",
									"subnet": {
										"id": "[variables('sqlSubnetRef')]"
									},
									"loadBalancerBackendAddressPools": [
										{
											"id":"[variables('derivedIds').sqlBEAddressPoolID]"
										}
									]
								}
							}
						]
					},
					"dnsServers": {
						"value": [
								"[parameters('adPDCNICIPAddress')]","[parameters('adBDCNICIPAddress')]"
						]
					}

				}
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(variables('vmSettings').spappVMName, copyindex())]",
			"location": "[parameters('location')]",
			"copy": {
				"name": "spAppVMLoop",
				"count": "[variables('vmSettings').noOfspRoleVMs]"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',concat(parameters('storageAccountNamePrefix'), '2'))]",
				"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmSettings').spappVMName, copyindex(),'-nic'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.spAppAvailabilitySetName)]",
				"Microsoft.Resources/deployments/UpdateVNetDNS2"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('spVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.spAppAvailabilitySetName)]"
				},
				"osProfile": {
					"computername": "[concat(variables('vmSettings').spappVMName, copyindex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('vmSettings').spImagePublisher]",
						"offer": "[variables('vmSettings').spImageOffer]",
						"sku": "[variables('vmSettings').spImageSKU]",
						"version": "latest"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('storageAccountNamePrefix'),'2.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/',variables('vmSettings').spappVMName, copyindex(),'-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri":"[concat('http://',parameters('storageAccountNamePrefix'),'2.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/', variables('vmSettings').spappVMName, copyindex(), '-Data-1.vhd')]"
							},
							"name":"[concat(variables('vmSettings').spappVMName, copyindex(),'-data-disk1')]",
							"caching" : "None",
							"createOption": "empty",
							"diskSizeGB": "[variables('vmSettings').spDiskSize]",
							"lun": 0
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmSettings').spappVMName, copyindex(),'-nic'))]"
						}
					]
				}
			},
			"resources" : [
				{
					"type": "Microsoft.Compute/virtualMachines/extensions",
					"name": "[concat(variables('vmSettings').spappVMName, copyindex(),'/EnableDnsClientLogging')]",
					"location": "[parameters('location')]",
					"apiVersion": "2015-05-01-preview",
					"dependsOn": [
						"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spappVMName, copyindex())]"
					],
					"properties": {
						"publisher": "Microsoft.Compute",
						"type": "CustomScriptExtension",
						"typeHandlerVersion": "1.4",
						"settings": {
							"commandToExecute": "[variables('commands')]"
						}
					}
				}
			]
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmSettings').spappVMName,'0/ConfigureSPAppServer')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spappVMName,'0')]",
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spappVMName,'0','/extensions/EnableDnsClientLogging')]",
				"[concat('Microsoft.Compute/virtualMachines/',variables('vmSettings').sqlVMName,'1/extensions/CreateCluster')]"
				],
			"properties": {
				"publisher": "Microsoft.Powershell.Test",
				"type": "DSC",
				"typeHandlerVersion": "2.4",
				"settings": {
					"modulesURL": "[variables('configuration').spModulesURL]",
					"configurationFunction": "[variables('configuration').spConfigurationFunction]",
					"properties": {
						"domainName": "[parameters('domainName')]",
						"adminCreds":{
							"userName": "[parameters('adminUserName')]",
							"password": "privateSettingsRef:adminPassword"
						},
						"sharePointSetupUserAccountcreds":{
							"userName": "[parameters('sharePointSetupUserAccountUserName')]",
							"password": "privateSettingsRef:sharePointSetupUserAccountPassword"
						},
						"sharePointFarmAccountcreds":{
							"userName": "[parameters('sharePointFarmAccountUserName')]",
							"password": "privateSettingsRef:sharePointFarmAccountPassword"
						},
						"sharePointFarmPassphrasecreds":{
							"userName": "ignore",
							"password": "privateSettingsRef:sharePointFarmPassphrasePassword"
						},
						"sqlServiceCreds":{
							"userName": "[parameters('sqlServerServiceAccountUserName')]",
							"password": "privateSettingsRef:sqlServerServiceAccountPassword"
						},
						"databaseName":"[variables('configDatabaseName')]",
						"sqlAlwaysOnAvailabilityGroupName":"[variables('sqlAOAGName')]",
						"primaryReplica":"[concat(variables('vmSettings').sqlVMName,'1')]",
						"secondaryReplica":"[concat(variables('vmSettings').sqlVMName,'0')]",
						"databaseNames":["[variables('administrationContentDatabaseName')]","[variables('configDatabaseName')]"],
						"administrationContentDatabaseName":"[variables('administrationContentDatabaseName')]",
						"databaseServer":"[concat(variables('vmSettings').sqlVMName,'1.',parameters('domainName'))]",
						"configuration":"[concat('{\"roles\":[{\"type\":\"application\",\"properties\":{\"fqdn\":\"',reference('spCentralAdminIPSetup').outputs.fqdn.value,'\",\"port\":',variables('vmSettings').spCentralAdminPort,'}}],\"configureForHa\":\"True\",\"loadBalancedSetProbePort\":',variables('spWebProbePort'),'}')]"
					}
				},
				"protectedSettings": {
					"items": {
						"adminPassword": "[parameters('adminPassword')]",
						"sharePointSetupUserAccountPassword": "[parameters('sharePointSetupUserAccountPassword')]",
						"sharePointFarmAccountPassword": "[parameters('sharePointFarmAccountPassword')]",
						"sharePointFarmPassphrasePassword": "[parameters('sharePointFarmPassphrasePassword')]",
						"sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
					}
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmSettings').spappVMName,'1/ConfigureSPAppServer')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spappVMName,'1')]",
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spappVMName,'1','/extensions/EnableDnsClientLogging')]",
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spappVMName,'0/extensions/ConfigureSPAppServer')]"
			],
			"properties": {
				"publisher": "Microsoft.Powershell.Test",
				"type": "DSC",
				"typeHandlerVersion": "2.4",
				"settings": {
					"modulesURL": "[variables('configuration').spModulesURL]",
					"configurationFunction": "[variables('configuration').spConfigurationFunction]",
					"properties": {
						"domainName": "[parameters('domainName')]",
						"adminCreds":{
							"userName": "[parameters('adminUserName')]",
							"password": "privateSettingsRef:adminPassword"
						},
						"sharePointSetupUserAccountcreds":{
							"userName": "[parameters('sharePointSetupUserAccountUserName')]",
							"password": "privateSettingsRef:sharePointSetupUserAccountPassword"
						},
						"sharePointFarmAccountcreds":{
							"userName": "[parameters('sharePointFarmAccountUserName')]",
							"password": "privateSettingsRef:sharePointFarmAccountPassword"
						},
						"sharePointFarmPassphrasecreds":{
							"userName": "ignore",
							"password": "privateSettingsRef:sharePointFarmPassphrasePassword"
						},
						"sqlServiceCreds":{
							"userName": "[parameters('sqlServerServiceAccountUserName')]",
							"password": "privateSettingsRef:sqlServerServiceAccountPassword"
						},
						"databaseName":"[variables('configDatabaseName')]",
						"administrationContentDatabaseName":"[variables('administrationContentDatabaseName')]",
						"databaseServer":"[concat(variables('vmSettings').sqlVMName,'1.',parameters('domainName'))]",
						"sqlAlwaysOnAvailabilityGroupName":"[variables('sqlAOAGName')]",
						"primaryReplica":"[concat(variables('vmSettings').sqlVMName,'1')]",
						"secondaryReplica":"[concat(variables('vmSettings').sqlVMName,'0')]",
						"databaseNames":null,
						"configuration":"[concat('{\"roles\":[{\"type\":\"application\",\"properties\":{\"fqdn\":\"',reference('spCentralAdminIPSetup').outputs.fqdn.value,'\",\"port\":',variables('vmSettings').spCentralAdminPort,'}}],\"configureForHa\":\"True\",\"loadBalancedSetProbePort\":',variables('spWebProbePort'),'}')]"
					}
				},
				"protectedSettings": {
					"items": {
						"adminPassword": "[parameters('adminPassword')]",
						"sharePointSetupUserAccountPassword": "[parameters('sharePointSetupUserAccountPassword')]",
						"sharePointFarmAccountPassword": "[parameters('sharePointFarmAccountPassword')]",
						"sharePointFarmPassphrasePassword": "[parameters('sharePointFarmPassphrasePassword')]",
						"sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
					}
				}
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(variables('vmSettings').spwebVMName, copyindex())]",
			"location": "[parameters('location')]",
			"copy": {
				"name": "spWebVMLoop",
				"count": "[variables('vmSettings').noOfspRoleVMs]"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',concat(parameters('storageAccountNamePrefix'), '2'))]",
				"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmSettings').spwebVMName, copyindex(),'-nic'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.spWebAvailabilitySetName)]",
				"Microsoft.Resources/deployments/UpdateVNetDNS2"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('spVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.spWebAvailabilitySetName)]"
				},
				"osProfile": {
					"computername": "[concat(variables('vmSettings').spwebVMName, copyindex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('vmSettings').spImagePublisher]",
						"offer": "[variables('vmSettings').spImageOffer]",
						"sku": "[variables('vmSettings').spImageSKU]",
						"version": "latest"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('storageAccountNamePrefix'),'2.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/',variables('vmSettings').spwebVMName, copyindex(),'-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri":"[concat('http://',parameters('storageAccountNamePrefix'),'2.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/', variables('vmSettings').spwebVMName, copyindex(), '-Data-1.vhd')]"
							},
							"name":"[concat(variables('vmSettings').spwebVMName, copyindex(),'-data-disk1')]",
							"caching" : "None",
							"createOption": "empty",
							"diskSizeGB": "[variables('vmSettings').spDiskSize]",
							"lun": 0
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmSettings').spwebVMName, copyindex(),'-nic'))]"
						}
					]
				}
			},
			"resources" : [
				{
					"type": "Microsoft.Compute/virtualMachines/extensions",
					"name": "[concat(variables('vmSettings').spwebVMName, copyindex(),'/EnableDnsClientLogging')]",
					"location": "[parameters('location')]",
					"apiVersion": "2015-05-01-preview",
					"dependsOn": [
						"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spwebVMName, copyindex())]"
					],
					"properties": {
						"publisher": "Microsoft.Compute",
						"type": "CustomScriptExtension",
						"typeHandlerVersion": "1.4",
						"settings": {
							"commandToExecute": "[variables('commands')]"
						}
					}
				}
			]
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmSettings').spwebVMName,'0/ConfigureSPWebServer')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spwebVMName,'0')]",
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spwebVMName,'0/extensions/EnableDnsClientLogging')]",
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spappVMName,'1/extensions/ConfigureSPAppServer')]"
			],
			"properties": {
				"publisher": "Microsoft.Powershell.Test",
				"type": "DSC",
				"typeHandlerVersion": "2.4",
				"settings": {
					"modulesURL": "[variables('configuration').spModulesURL]",
					"configurationFunction": "[variables('configuration').spConfigurationFunction]",
					"properties": {
						"domainName": "[parameters('domainName')]",
						"adminCreds":{
							"userName": "[parameters('adminUserName')]",
							"password": "privateSettingsRef:adminPassword"
						},
						"sharePointSetupUserAccountcreds":{
							"userName": "[parameters('sharePointSetupUserAccountUserName')]",
							"password": "privateSettingsRef:sharePointSetupUserAccountPassword"
						},
						"sharePointFarmAccountcreds":{
							"userName": "[parameters('sharePointFarmAccountUserName')]",
							"password": "privateSettingsRef:sharePointFarmAccountPassword"
						},
						"sharePointFarmPassphrasecreds":{
							"userName": "ignore",
							"password": "privateSettingsRef:sharePointFarmPassphrasePassword"
						},
						"sqlServiceCreds":{
							"userName": "[parameters('sqlServerServiceAccountUserName')]",
							"password": "privateSettingsRef:sqlServerServiceAccountPassword"
						},
						"databaseName":"[variables('configDatabaseName')]",
						"administrationContentDatabaseName":"[variables('administrationContentDatabaseName')]",
						"sqlAlwaysOnAvailabilityGroupName":"[variables('sqlAOAGName')]",
						"primaryReplica":"[concat(variables('vmSettings').sqlVMName,'1')]",
						"secondaryReplica":"[concat(variables('vmSettings').sqlVMName,'0')]",
						"databaseNames":"[variables('contentDatabaseName')]",
						"databaseServer":"[concat(variables('vmSettings').sqlVMName,'1.',parameters('domainName'))]",
						"configuration":"[concat('{\"roles\":[{\"type\":\"web\",\"properties\":{\"webApp\":{\"name\":\"spARM\",\"applicationPool\":\"spARM AppPool\",\"applicationPoolAccount\":\"', parameters('sharePointFarmAccountUserName'),'\",\"url\":\"http://',reference('spWebIPSetup').outputs.fqdn.value,'\",\"port\":80,\"hostHeader\":\"',reference('spWebIPSetup').outputs.fqdn.value,'\",\"databaseName\":\"',variables('contentDatabaseName'),'\"},\"site\":{\"name\":\"spARM\",\"template\":\"',parameters('spSiteTemplateName'),'\",\"url\":\"http://',reference('spWebIPSetup').outputs.fqdn.value,'\",\"ownerAliasDomain\":\"',parameters('domainName'),'\",\"ownerAliasUserName\":\"',parameters('sharePointFarmAccountUserName'),'\",\"secondaryOwnerAliasDomain\":\"',parameters('domainName'),'\",\"secondaryOwnerAliasUserName\":\"',parameters('adminUserName'),'\"}}}],\"configureForHa\":\"True\",\"loadBalancedSetProbePort\":',variables('spWebProbePort'),'}')]"
					}
				},
				"protectedSettings": {
					"items": {
						"adminPassword": "[parameters('adminPassword')]",
						"sharePointSetupUserAccountPassword": "[parameters('sharePointSetupUserAccountPassword')]",
						"sharePointFarmAccountPassword": "[parameters('sharePointFarmAccountPassword')]",
						"sharePointFarmPassphrasePassword": "[parameters('sharePointFarmPassphrasePassword')]",
						"sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
					}
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmSettings').spwebVMName,'1/ConfigureSPWebServer')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spwebVMName,'1')]",
				"[concat('Microsoft.Compute/virtualMachines/',variables('vmSettings').spwebVMName,'0/extensions/ConfigureSPWebServer')]"
			],
			"properties": {
				"publisher": "Microsoft.Powershell.Test",
				"type": "DSC",
				"typeHandlerVersion": "2.4",
				"settings": {
					"modulesURL": "[variables('configuration').spModulesURL]",
					"configurationFunction": "[variables('configuration').spConfigurationFunction]",
					"properties": {
						"domainName": "[parameters('domainName')]",
						"adminCreds":{
							"userName": "[parameters('adminUserName')]",
							"password": "privateSettingsRef:adminPassword"
						},
						"sharePointSetupUserAccountcreds":{
							"userName": "[parameters('sharePointSetupUserAccountUserName')]",
							"password": "privateSettingsRef:sharePointSetupUserAccountPassword"
						},
						"sharePointFarmAccountcreds":{
							"userName": "[parameters('sharePointFarmAccountUserName')]",
							"password": "privateSettingsRef:sharePointFarmAccountPassword"
						},
						"sharePointFarmPassphrasecreds":{
							"userName": "ignore",
							"password": "privateSettingsRef:sharePointFarmPassphrasePassword"
						},
						"sqlServiceCreds":{
							"userName": "[parameters('sqlServerServiceAccountUserName')]",
							"password": "privateSettingsRef:sqlServerServiceAccountPassword"
						},
						"databaseName":"[variables('configDatabaseName')]",
						"administrationContentDatabaseName":"[variables('administrationContentDatabaseName')]",
						"sqlAlwaysOnAvailabilityGroupName":"[variables('sqlAOAGName')]",
						"primaryReplica":"[concat(variables('vmSettings').sqlVMName,'1')]",
						"secondaryReplica":"[concat(variables('vmSettings').sqlVMName,'0')]",
						"databaseNames":null,
						"databaseServer":"[concat(variables('vmSettings').sqlVMName,'1.',parameters('domainName'))]",
						"configuration":"[concat('{\"roles\":[{\"type\":\"web\",\"properties\":{\"webApp\":{\"name\":\"spARM\",\"applicationPool\":\"spARM AppPool\",\"applicationPoolAccount\":\"', parameters('sharePointFarmAccountUserName'),'\",\"url\":\"http://',reference('spWebIPSetup').outputs.fqdn.value,'\",\"port\":80,\"hostHeader\":\"',reference('spWebIPSetup').outputs.fqdn.value,'\",\"databaseName\":\"',variables('contentDatabaseName'),'\"},\"site\":{\"name\":\"spARM\",\"template\":\"',parameters('spSiteTemplateName'),'\",\"url\":\"http://',reference('spWebIPSetup').outputs.fqdn.value,'\",\"ownerAliasDomain\":\"',parameters('domainName'),'\",\"ownerAliasUserName\":\"',parameters('sharePointFarmAccountUserName'),'\",\"secondaryOwnerAliasDomain\":\"',parameters('domainName'),'\",\"secondaryOwnerAliasUserName\":\"',parameters('adminUserName'),'\"}}}],\"configureForHa\":\"True\",\"loadBalancedSetProbePort\":',variables('spWebProbePort'),'}')]"
					}
				},
				"protectedSettings": {
					"items": {
						"adminPassword": "[parameters('adminPassword')]",
						"sharePointSetupUserAccountPassword": "[parameters('sharePointSetupUserAccountPassword')]",
						"sharePointFarmAccountPassword": "[parameters('sharePointFarmAccountPassword')]",
						"sharePointFarmPassphrasePassword": "[parameters('sharePointFarmPassphrasePassword')]",
						"sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
					}
				}
			}
		}
	]
}
